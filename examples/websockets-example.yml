# WebSockets Example Configuration
# This configuration demonstrates running Rails with a separate Action Cable server
# for optimal WebSocket performance and Solid Cable support using reverse proxies

server:
  listen: 3000
  hostname: localhost
  public_dir: public

# Static file serving for assets
static_files:
  paths:
    - /assets/*
    - /favicon.ico
    - /robots.txt
  headers:
    cache_control: "public, max-age=3600"

# Reverse proxy configuration for WebSocket and HTTP routing
routes:
  reverse_proxies:
    # WebSocket proxy for Action Cable
    - name: action-cable-websocket
      path: "^/cable"
      target: http://localhost:28080
      websocket: true
      headers:
        X-Forwarded-For: "$remote_addr"
        X-Forwarded-Proto: "$scheme"
        X-Forwarded-Host: "$host"

    # API endpoints that might need separate handling
    - name: api-proxy
      path: "^/api/"
      target: http://localhost:4001
      headers:
        X-Forwarded-For: "$remote_addr"
        X-Forwarded-Proto: "$scheme"
        X-Real-IP: "$remote_addr"

# Managed processes for Redis and Action Cable
managed_processes:
  # Redis server for Action Cable (optional with Solid Cable)
  - name: redis
    command: redis-server
    auto_restart: true

  # Standalone Action Cable server
  - name: action-cable
    command: bundle
    args: [exec, puma, -p, "28080", config/cable.ru]
    working_dir: /app
    start_delay: 2
    auto_restart: true
    env:
      RAILS_ENV: production
      ACTION_CABLE_ADAPTER: solid_cable  # or redis for Redis adapter

# Rails application configuration
applications:
  framework: rails
  runtime_exec: bundle
  server_exec: exec
  server_args: ["puma", "-p", "{{port}}"]

  # WebSocket connection tracking
  # Since this app proxies WebSocket requests to a standalone Action Cable server,
  # we disable tracking to avoid unnecessary overhead
  track_websockets: true  # Global default (can be overridden per-tenant)

  pools:
    max_size: 5
    timeout: 5m
    start_port: 4000

  tenants:
    - name: main
      root: /app
      track_websockets: false  # Disable tracking (WebSockets handled by standalone server)
      env:
        RAILS_ENV: production
        DATABASE_URL: sqlite3:db/production.sqlite3
        ACTION_CABLE_URL: ws://localhost:3000/cable

# Example usage scenarios:
#
# 1. WebSocket connections to /cable will be proxied to Action Cable server on port 28080
#    - Headers like X-Forwarded-For are automatically added
#    - WebSocket upgrade is handled transparently
#
# 2. API requests to /api/* will be proxied to a separate API server on port 4001
#    - Useful for microservices architecture
#    - Request headers are preserved and enhanced
#
# 3. All other requests go to the main Rails application
#    - Static files served directly by Navigator
#    - Dynamic content served by Rails on ports 4000+
#
# Configuration Benefits:
# - Better performance: WebSocket connections handled by dedicated Action Cable server
# - Scalability: API and WebSocket traffic can be scaled independently
# - Flexibility: Easy to add/remove proxy routes without changing application code
# - Monitoring: Each proxy route can be monitored and configured separately
#
# Note on WebSocket Configuration:
# - `websocket: true` (in routes.reverse_proxies): Enables WebSocket upgrade support for proxy route
# - `track_websockets: false` (in applications.tenants): Disables connection tracking for tenant
#
# The main Rails app has `track_websockets: false` because it doesn't handle WebSocket
# connections directly - they're proxied to the standalone Action Cable server. This prevents
# the app from being kept alive solely due to WebSocket connections it doesn't actually handle.